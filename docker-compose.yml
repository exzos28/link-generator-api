version: "3.8"
services:
  server:
    build:
      context: ./
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: server
    ports:
      - '3000:3000'
    volumes:
      - ./:/app
      - /app/node_modules
    restart: 'unless-stopped'
    networks:
      - mongodb_network
    links:
      - mongodb
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./db:/data/db
    networks:
      - mongodb_network
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=${DB_HOST}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    volumes:
      - mongodb-data
    depends_on:
      - mongodb
    networks:
      - mongodb_network
    ports:
      - "8081:8081"
    healthcheck:
      test:  wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
#      test:  wget --quiet --tries=3 --spider http://${DB_USER}:${DB_PASSWORD}@10.10.10.60:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  mongodb_network:
    name: mongodb_network
